set background=dark

if (has("nvim"))
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
if (has("termguicolors"))
  set termguicolors
endif

let g:onedark_terminal_italics=1

syntax on
colorscheme onedark

" Highlight the cursor's current line
set cursorline

" <Ctrl-l> redraws the screen and removes any search highlighting.
nnoremap <silent> <C-l> :nohl<CR><C-l>

highlight BadWhitespace ctermbg=red guibg=red

" Highlight the 80, and 119+ column for python
let colorcolumn=120

set spelllang=en_us
set relativenumber
set number

" Not for term buffers
" augroup numberz
"   autocmd!
"   autocmd TermOpen * :set nonumber | :set norelativenumber
"   autocmd FocusLost,InsertEnter,BufLeave,BufWinLeave *
"     \ if &buftype != 'terminal' | :set norelativenumber
"   autocmd FocusGained,InsertLeave,BufEnter,BufWinEnter *
"     \ if &buftype != 'terminal' | :set relativenumber
" augroup END

" Highlight codetags
augroup codetags
  autocmd!
  autocmd Syntax * call matchadd('Todo', '\W\zs\(TODO\|FIXME\|XXX\|???\|!!!\|BUG\|HACK\|NOTE\|INFO\|IDEA\):')
augroup END

" Python stuff
augroup python
  autocmd!
  autocmd FileType python let &l:colorcolumn="80,".join(range(120,999),",")
  autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
  autocmd FileType python setlocal sts=4 sw=4 ts=4 tw=79
  autocmd FileType python normal zR
  highlight BadWhitespace ctermbg=red guibg=red
augroup END

" let g:syntastic_python_checkers = ['flake8']
let g:syntastic_python_flake8_args = '--ignore=E403,E128,F403'
" let g:pymode_folding = 0
let g:pymode_trim_whitespaces = 1
let g:pymode_python = 'python3'

augroup gitcommit
  autocmd!
  autocmd FileType gitcommit setlocal colorcolumn=73
augroup END

augroup text
  autocmd!
  autocmd BufNewFile,BufRead *.md,*.txt,*.scratch setlocal spell wrap
augroup END

set wildignore+=*.pyc,*.zip,*.gz,*.tar
set wildignore+=*.jpg,*.jpeg,*.gif,*.png,*.ico,*.psd,*.swf
set wildignore+=*.pdf,*.doc,*.docx
set wildignore+=.gitkeep

" Change the indent defaults
set shiftwidth=2
set tabstop=2
set softtabstop=2

" Command tabbing
set wildmode=longest,list,full
set wildmenu

" Syntax
au BufNewFile,BufRead *.scss setlocal filetype=scss
au BufNewFile,BufRead *.html setlocal filetype=htmldjango
au BufNewFile,BufRead /etc/nginx/*,*/nginx/*.conf setlocal filetype=nginx
au BufnewFile,BufRead xorg.conf* setlocal filetype=xf86conf

" Omnicomplete
" au FileType python set omnifunc=pythoncomplete#Complete
au FileType javascript set omnifunc=javascriptcomplete#CompleteJS
au FileType html set omnifunc=htmlcomplete#CompleteTags
au FileType css set omnifunc=csscomplete#CompleteCSS

" Close that stupid YCM preview window
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_seed_identifiers_with_syntax = 1

" Indent Guides
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 2
let g:indent_guides_enable_on_vim_startup = 1

" Use silver-searcher (ag) instead of ack-grep
let g:ackprg = 'ag --nogroup --nocolor --column'

" Don't hide quotes in JSON
let g:vim_json_syntax_conceal = 0

" Startify options
let g:startify_change_to_dir = 1
let g:startify_bookmarks = [
  \ '~/Workspace/howgood/research',
  \ '~/Workspace/howgood',
  \ '~/Workspace'
  \ ]

" Gutentags
let g:gutentags_enabled = 0
let g:gutentags_cache_dir = expand("~/.tags")
let g:gutentags_file_list_command = {
  \ 'markers': {
    \ '.git': 'git ls-files',
  \ },
\ }
let g:gutentags_exclude = [
  \ '.git',
  \ '.svn',
  \ '.hg',
  \ 'bundle',
  \ 'min',
  \ 'vendor',
  \ '\*.min.\*',
  \ '\*.map',
  \ '\*.swp',
  \ '\*.bak',
  \ '\*.pyc',
  \ '\*.class',
  \ '\*.sln',
  \ '\*.Master',
  \ '\*.csproj',
  \ '\*.csproj.user',
  \ '\*.cache',
  \ '\*.dll',
  \ '\*.pdb',
  \ 'tags',
  \ 'cscope.\*',
  \ '\*.tar.\*'
\ ]

" JSX
let g:jsx_ext_required = 0

" Gist.vim
let g:gist_clip_command = 'pbcopy'
let g:gist_detect_filetype = 1
let g:gist_post_private = 1
