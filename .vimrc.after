" Needed a change
set background=dark
let base16colorspace=256
colorscheme base16-default
" set background=dark
" colorscheme PaperColor

" Highlight the cursor's current line
set cursorline

" <Ctrl-l> redraws the screen and removes any search highlighting.
nnoremap <silent> <C-l> :nohl<CR><C-l>

highlight BadWhitespace ctermbg=red guibg=red

" Highlight the 80, and 119+ column for python
let colorcolumn=120

set spelllang=en_us

augroup python
  au!
  au FileType python let &l:colorcolumn="80,".join(range(120,999),",")
  au FileType python setlocal omnifunc=pythoncomplete#Complete
  au FileType python setlocal sts=4 sw=4 ts=4 tw=79
  au BufWritePre *.py normal m`:%s/\s\+$//e``
  highlight BadWhitespace ctermbg=red guibg=red
  au BufRead,BufNewFile *.py match BadWhitespace /^\t\+/
  au BufRead,BufNewFile *.py match BadWhitespace /\s\+$/
augroup END

augroup gitcommit
  au!
  au FileType gitcommit setlocal colorcolumn=73
augroup END

augroup text
  au!
  au BufNewFile,BufRead *.md,*.txt,*.scratch setlocal spell wrap
augroup END

set wildignore+=*.pyc,*.zip,*.gz,*.tar
set wildignore+=*.jpg,*.jpeg,*.gif,*.png,*.ico,*.psd,*.swf
set wildignore+=*.pdf,*.doc,*.docx
set wildignore+=.gitkeep

" Change the indent defaults
set shiftwidth=2
set tabstop=2
set softtabstop=2

" Command tabbing
set wildmode=longest,list,full
set wildmenu

" Syntax
au BufNewFile,BufRead *.scss setlocal filetype=scss
au BufNewFile,BufRead *.html setlocal filetype=htmldjango
au BufnewFile,BufRead *.slim setlocal filetype=slim
au BufNewFile,BufRead /etc/nginx/*,*/nginx/*.conf setlocal filetype=nginx
au BufnewFile,BufRead xorg.conf* setlocal filetype=xf86conf

" Omnicomplete
" au FileType python set omnifunc=pythoncomplete#Complete
au FileType javascript set omnifunc=javascriptcomplete#CompleteJS
au FileType html set omnifunc=htmlcomplete#CompleteTags
au FileType css set omnifunc=csscomplete#CompleteCSS

" Close that stupid YCM preview window
let g:ycm_autoclose_preview_window_after_completion=1

" Python stuff
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_python_flake8_args = '--ignore=E403,E128,F403'

" Indent Guides
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 2
let g:indent_guides_enable_on_vim_startup = 1

" Use silver-searcher (ag) instead of ack-grep
let g:ackprg = 'ag --nogroup --nocolor --column'

" Don't hide quotes in JSON
let g:vim_json_syntax_conceal = 0

" Startify options
let g:startify_change_to_dir = 1
let g:startify_bookmarks = [
  \ '~/Workspace/howgood/research',
  \ '~/Workspace/howgood',
  \ '~/Workspace'
  \ ]

" Gutentags
let g:gutentags_cache_dir = expand("~/.vim/_temp/tags")
let g:gutentags_exclude = [
    \ '.git',
    \ '.svn',
    \ '.hg',
    \ 'bundle',
    \ 'min',
    \ 'vendor',
    \ '\*.min.\*',
    \ '\*.map',
    \ '\*.swp',
    \ '\*.bak',
    \ '\*.pyc',
    \ '\*.class',
    \ '\*.sln',
    \ '\*.Master',
    \ '\*.csproj',
    \ '\*.csproj.user',
    \ '\*.cache',
    \ '\*.dll',
    \ '\*.pdb',
    \ 'tags',
    \ 'cscope.\*',
    \ '\*.tar.\*'
    \ ]

" Markdown Composer
let g:markdown_composer_open_browser = 0
let g:markdown_composer_autostart = 0

" JSX
let g:jsx_ext_required = 0

" NetRW
com!  -nargs=* -bar -bang -complete=dir  Lexplore  call netrw#Lexplore(<q-args>, <bang>0)

fun! Lexplore(dir, right)
  if exists("t:netrw_lexbufnr")
  " close down netrw explorer window
  let lexwinnr = bufwinnr(t:netrw_lexbufnr)
  if lexwinnr != -1
    let curwin = winnr()
    exe lexwinnr."wincmd w"
    close
    exe curwin."wincmd w"
  endif
  unlet t:netrw_lexbufnr

  else
    " open netrw explorer window in the dir of current file
    " (even on remote files)
    let path = substitute(exists("b:netrw_curdir")? b:netrw_curdir : expand("%:p"), '^\(.*[/\\]\)[^/\\]*$','\1','e')
    exe (a:right? "botright" : "topleft")." vertical ".((g:netrw_winsize > 0)? (g:netrw_winsize*winwidth(0))/100 : -g:netrw_winsize) . " new"
    if a:dir != ""
      exe "Explore ".a:dir
    else
      exe "Explore ".path
    endif
    setlocal winfixwidth
    let t:netrw_lexbufnr = bufnr("%")
  endif
endfun

" Mapped to <leader>n
map <silent> <leader>n :Lexplore<CR>

" absolute width of netrw window
let g:netrw_winsize = -28

" do not display info on the top of window
let g:netrw_banner = 0

" tree-view
let g:netrw_liststyle = 3

" sort is affecting only: directories on the top, files below
let g:netrw_sort_sequence = '[\/]$,*'

" use the previous window to open file
let g:netrw_browse_split = 4
